services:
  mongodb:
    image: mongo-londonfire:1.0.0
    build:
      context: .
      dockerfile: ./initMongo/Dockerfile
    ports:
      - "27017:27017"
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_LONDON_FIRE_USER=${MONGO_LONDON_FIRE_USER}
      - MONGO_LONDON_FIRE_PASSWORD=${MONGO_LONDON_FIRE_PASSWORD}
    volumes:
      - ./data/mongodb:/dbdata
    networks:
      - stack

  api:
    image: api:latest
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_LONDON_FIRE_USER=${MONGO_LONDON_FIRE_USER}
      - MONGO_LONDON_FIRE_PASSWORD=${MONGO_LONDON_FIRE_PASSWORD}
      - MONGO_INITDB_HOST=${MONGO_INITDB_HOST}
    volumes:
      - ./data/modele:/data/modele
    networks:
      - stack
    depends_on:
      - mongodb
  
  entrainement_model:
    image: entrainement_model:latest
    build:
      context: .
      dockerfile: ./entrainement/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - VISUAL_CROSSING_KEY=${VISUAL_CROSSING_KEY}
      - SELENIUM_HOST=${SELENIUM_HOST}
    volumes:
      - ./data/modele:/data/modele
    networks:
      - stack
    depends_on:
      - mongodb
      - selenium
  
  selenium:
    image: selenium/standalone-chrome:108.0
    ports:
      - "4444:4444"
    environment:
      - SE_NODE_MAX_SESSIONS=30
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_VNC_NO_PASSWORD=1
    shm_size: '2g'
    networks:
      - stack

  airflow:
    image : airflow-londonfire:1.0.0
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - _AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_USERNAME}
      - _AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_PASSWORD}
    volumes:
      - ./data/modele:/data/modele
    networks:
      - stack    

networks:
  stack:
    driver: bridge
